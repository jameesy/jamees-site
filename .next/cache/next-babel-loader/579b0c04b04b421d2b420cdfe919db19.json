{"ast":null,"code":"import fetch from 'node-fetch';\nimport { API_ENDPOINT, NOTION_TOKEN } from './server-constants';\nexport default async function rpc(fnName, body) {\n  if (!NOTION_TOKEN) {\n    throw new Error('NOTION_TOKEN is not set in env');\n  }\n\n  const res = await fetch(`${API_ENDPOINT}/${fnName}`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      cookie: `token_v2=${NOTION_TOKEN}`\n    },\n    body: JSON.stringify(body)\n  });\n\n  if (res.ok) {\n    return res.json();\n  } else {\n    throw new Error(await getError(res));\n  }\n}\nexport async function getError(res) {\n  return `Notion API error (${res.status}) \\n${getJSONHeaders(res)}\\n ${await getBodyOrNull(res)}`;\n}\nexport function getJSONHeaders(res) {\n  return JSON.stringify(res.headers.raw());\n}\nexport function getBodyOrNull(res) {\n  try {\n    return res.text();\n  } catch (err) {\n    return null;\n  }\n}\nexport function values(obj) {\n  const vals = [];\n  Object.keys(obj).forEach(key => {\n    vals.push(obj[key]);\n  });\n  return vals;\n}","map":{"version":3,"sources":["/Users/jamesbedford/Documents/GitHub/jamees-site/src/lib/notion/rpc.ts"],"names":["fetch","API_ENDPOINT","NOTION_TOKEN","rpc","fnName","body","Error","res","method","headers","cookie","JSON","stringify","ok","json","getError","status","getJSONHeaders","getBodyOrNull","raw","text","err","values","obj","vals","Object","keys","forEach","key","push"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,YAAhC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,oBAA3C;AAEA,eAAe,eAAeC,GAAf,CAAmBC,MAAnB,EAAmCC,IAAnC,EAA8C;AAC3D,MAAI,CAACH,YAAL,EAAmB;AACjB,UAAM,IAAII,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEC,YAAa,IAAGG,MAAO,EAA3B,EAA8B;AACnDI,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAG,YAAWR,YAAa;AAF1B,KAF0C;AAMnDG,IAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAN6C,GAA9B,CAAvB;;AASA,MAAIE,GAAG,CAACM,EAAR,EAAY;AACV,WAAON,GAAG,CAACO,IAAJ,EAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAIR,KAAJ,CAAU,MAAMS,QAAQ,CAACR,GAAD,CAAxB,CAAN;AACD;AACF;AAED,OAAO,eAAeQ,QAAf,CAAwBR,GAAxB,EAAuC;AAC5C,SAAQ,qBAAoBA,GAAG,CAACS,MAAO,OAAMC,cAAc,CACzDV,GADyD,CAEzD,MAAK,MAAMW,aAAa,CAACX,GAAD,CAAM,EAFhC;AAGD;AAED,OAAO,SAASU,cAAT,CAAwBV,GAAxB,EAAuC;AAC5C,SAAOI,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACE,OAAJ,CAAYU,GAAZ,EAAf,CAAP;AACD;AAED,OAAO,SAASD,aAAT,CAAuBX,GAAvB,EAAsC;AAC3C,MAAI;AACF,WAAOA,GAAG,CAACa,IAAJ,EAAP;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,CAAgBC,GAAhB,EAA0B;AAC/B,QAAMC,IAAS,GAAG,EAAlB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyBC,GAAG,IAAI;AAC9BJ,IAAAA,IAAI,CAACK,IAAL,CAAUN,GAAG,CAACK,GAAD,CAAb;AACD,GAFD;AAGA,SAAOJ,IAAP;AACD","sourcesContent":["import fetch, { Response } from 'node-fetch'\nimport { API_ENDPOINT, NOTION_TOKEN } from './server-constants'\n\nexport default async function rpc(fnName: string, body: any) {\n  if (!NOTION_TOKEN) {\n    throw new Error('NOTION_TOKEN is not set in env')\n  }\n  const res = await fetch(`${API_ENDPOINT}/${fnName}`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      cookie: `token_v2=${NOTION_TOKEN}`,\n    },\n    body: JSON.stringify(body),\n  })\n\n  if (res.ok) {\n    return res.json()\n  } else {\n    throw new Error(await getError(res))\n  }\n}\n\nexport async function getError(res: Response) {\n  return `Notion API error (${res.status}) \\n${getJSONHeaders(\n    res\n  )}\\n ${await getBodyOrNull(res)}`\n}\n\nexport function getJSONHeaders(res: Response) {\n  return JSON.stringify(res.headers.raw())\n}\n\nexport function getBodyOrNull(res: Response) {\n  try {\n    return res.text()\n  } catch (err) {\n    return null\n  }\n}\n\nexport function values(obj: any) {\n  const vals: any = []\n\n  Object.keys(obj).forEach(key => {\n    vals.push(obj[key])\n  })\n  return vals\n}\n"]},"metadata":{},"sourceType":"module"}