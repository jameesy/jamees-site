{"ast":null,"code":"import fetch from 'node-fetch';\nimport { getError } from './rpc';\nimport { NOTION_TOKEN, API_ENDPOINT } from './server-constants';\nexport default async function getNotionAsset(res, assetUrl, blockId) {\n  const requestURL = `${API_ENDPOINT}/getSignedFileUrls`;\n  const assetRes = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      cookie: `token_v2=${NOTION_TOKEN}`,\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      urls: [{\n        url: assetUrl,\n        permissionRecord: {\n          table: 'block',\n          id: blockId\n        }\n      }]\n    })\n  });\n\n  if (assetRes.ok) {\n    return assetRes.json();\n  } else {\n    console.log('bad request', assetRes.status);\n    res.json({\n      status: 'error',\n      message: 'failed to load Notion asset'\n    });\n    throw new Error(await getError(assetRes));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}