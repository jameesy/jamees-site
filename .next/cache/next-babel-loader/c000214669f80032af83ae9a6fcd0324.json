{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Header from '../../components/header';\nimport { getBlogLink, getDateStr, postIsReady } from '../../lib/blog-helpers';\nimport getNotionUsers from '../../lib/notion/getNotionUsers';\nimport getBlogIndex from '../../lib/notion/getBlogIndex';\nexport async function getStaticProps() {\n  const postsTable = await getBlogIndex();\n  const authorsToGet = new Set();\n  const posts = Object.keys(postsTable).map(slug => {\n    const post = postsTable[slug]; // remove draft posts in production\n\n    if (!postIsReady(post)) {\n      return null;\n    }\n\n    post.Authors = post.Authors || [];\n\n    for (const author of post.Authors) {\n      authorsToGet.add(author);\n    }\n\n    return post;\n  }).filter(Boolean);\n  const {\n    users\n  } = await getNotionUsers([...authorsToGet]);\n  posts.map(post => {\n    post.Authors = post.Authors.map(id => users[id].full_name);\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default (({\n  posts = []\n}) => {\n  return __jsx(\"article\", null, __jsx(Header, {\n    title: \"Thoughts\"\n  }), __jsx(\"div\", {\n    className: \"post-list\"\n  }, posts.map(post => {\n    return __jsx(\"p\", {\n      className: \"post-item\",\n      key: post.Slug\n    }, __jsx(Link, {\n      href: \"/blog/[slug]\",\n      as: getBlogLink(post.Slug)\n    }, __jsx(\"a\", null, post.Page)), __jsx(\"time\", null, getDateStr(post.Date)));\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}