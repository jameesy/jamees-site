{"ast":null,"code":"import rpc, { values } from './rpc';\nconst PAGE_LIMIT = 100;\nexport default async function getPageData(pageId, skip = 3) {\n  try {\n    let blocks = [];\n    let chunkNumber = 0;\n    let currentPage;\n    let currentCursor = {\n      stack: []\n    };\n\n    do {\n      // hit page limit, load next page\n      const nextBlock = await loadPageChunk({\n        pageId,\n        cursor: currentCursor,\n        chunkNumber\n      });\n      currentPage = values(nextBlock.recordMap.block);\n      currentCursor = {\n        stack: [nextBlock.cursor.stack[0]]\n      };\n      chunkNumber++;\n\n      if (currentPage[0] && currentPage[0].value.content) {\n        // remove table blocks\n        currentPage.splice(0, skip);\n      }\n\n      blocks = blocks.concat(currentPage);\n    } while (currentPage.length >= PAGE_LIMIT);\n\n    return {\n      blocks\n    };\n  } catch (err) {\n    console.error(`Failed to load pageData for ${pageId}`, err);\n    return {\n      blocks: []\n    };\n  }\n}\nexport function loadPageChunk({\n  pageId,\n  limit = PAGE_LIMIT,\n  cursor = {\n    stack: []\n  },\n  chunkNumber = 0,\n  verticalColumns = false\n}) {\n  return rpc('loadPageChunk', {\n    pageId,\n    limit,\n    cursor,\n    chunkNumber,\n    verticalColumns\n  });\n}","map":null,"metadata":{},"sourceType":"module"}